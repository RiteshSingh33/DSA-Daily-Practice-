LeetCode Question 160 - Count the Number of Consistent Strings

Description : You are given a string allowed consisting of distinct characters and an array of strings words. A string is consistent if all characters in the string appear in the string allowed.

Return the number of consistent strings in the array words.

 

Example 1:

Input: allowed = "ab", words = ["ad","bd","aaab","baa","badab"]
Output: 2
Explanation: Strings "aaab" and "baa" are consistent since they only contain characters 'a' and 'b'.
Example 2:

Input: allowed = "abc", words = ["a","b","c","ab","ac","bc","abc"]
Output: 7
Explanation: All strings are consistent.
Example 3:

Input: allowed = "cad", words = ["cc","acd","b","ba","bac","bad","ac","d"]
Output: 4
Explanation: Strings "cc", "acd", "ac", and "d" are consistent.


Solution : 
class Solution {
    public int countConsistentStrings(String allowed, String[] words) {
        Set<Character> set = new HashSet<>();
        for(int i = 0;i<allowed.length();i++){
            set.add(allowed.charAt(i));
        }
        int count = 0;
        for(String i : words){
            if(possible(set,i)) count++;
        }
        return count;
    }
    public boolean possible(Set<Character> set, String b){
        for(int i = 0;i<b.length();i++){
            if(!set.contains(b.charAt(i))) return false;
        }
        return true;
    }
}
