LeetCode Question 127 - Sort the People

Description : You are given an array of strings names, and an array heights that consists of distinct positive integers. Both arrays are of length n.

For each index i, names[i] and heights[i] denote the name and height of the ith person.

Return names sorted in descending order by the people's heights.

 

Example 1:

Input: names = ["Mary","John","Emma"], heights = [180,165,170]
Output: ["Mary","Emma","John"]
Explanation: Mary is the tallest, followed by Emma and John.
Example 2:

Input: names = ["Alice","Bob","Bob"], heights = [155,185,150]
Output: ["Bob","Alice","Bob"]
Explanation: The first Bob is the tallest, followed by Alice and the second Bob.

Solution : 
class Solution {
    public String[] sortPeople(String[] names, int[] heights) {
        for(int i = 0;i<heights.length-1;i++){
            int max = i;
            for(int j = i+1;j<heights.length;j++){
                if(heights[j]>heights[max]){
                    max = j;
                }
            }
            int a = heights[i];
            heights[i] = heights[max];
            heights[max] = a;

            String tempName = names[i];
            names[i] = names[max];
            names[max] = tempName;
        }
        return names;
    //     Approach 2
    //     Map<Integer,String> map = new TreeMap<>();
    //     for(int i = 0;i<heights.length;i++){
    //         map.put(heights[i],names[i]);
    //     }
    //     int i = 0;
    //     String[] arr = new String[heights.length];
    //     for(Map.Entry<Integer,String> entry : map.entrySet()){
    //         arr[i++] = entry.getValue();
    //     }
    //     reverse(arr);
    //     return arr;
    // }
    // public void reverse(String[] arr){
    //     int i = 0,j = arr.length-1;
    //     while(i<j){
    //         String temp = arr[i];
    //         arr[i++] = arr[j];
    //         arr[j--] = temp;
    //     }
    }
}
