LeetCode Question 47 - Largest Rectangle in Histogram

Description : Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.

 

Example 1:


Input: heights = [2,1,5,6,2,3]
Output: 10
Explanation: The above is a histogram where width of each bar is 1.
The largest rectangle is shown in the red area, which has an area = 10 units.
Example 2:


Input: heights = [2,4]
Output: 4
 

Constraints:

1 <= heights.length <= 105
0 <= heights[i] <= 104

Solution : 
class Solution {
    public int largestRectangleArea(int[] arr) {
        int area = 0,max = 0;
        int[] nse = nextSmaller(arr);
        int[] pse = previousSmaller(arr);
        for(int i = 0;i<arr.length;i++){
            area = arr[i] * (nse[i] - pse[i] -1);
            if(area>max){
                max = area;
            }
        }
        return max;
    }
    public int[] previousSmaller(int[] heights){
        Stack<Integer> st = new Stack<>();
        int[] pse = new int[heights.length];
        pse[0] = -1;
        st.push(0);
        for (int i = 1; i < heights.length; i++) {
            while(st.size()>0 && heights[st.peek()]>=heights[i]) st.pop();
            if(st.size()==0) pse[i] = -1;
            else pse[i] = st.peek();
            st.push(i);
        }
        return pse;
    }
    public int[] nextSmaller(int[] heights){
        Stack<Integer> st = new Stack<>();
        int[] nse = new int[heights.length];
        nse[nse.length-1] = nse.length;
        st.push(nse.length-1);
        for (int i = heights.length-2; i >= 0; i--) {
            while(st.size()>0 && heights[st.peek()]>=heights[i]) st.pop();
            if(st.size()==0) nse[i] = nse.length;
            else nse[i] = st.peek();
            st.push(i);
        }
        return nse;
    }
}
