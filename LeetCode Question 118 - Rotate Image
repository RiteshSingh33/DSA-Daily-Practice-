LeetCode Question 118 - Rotate Image

Description : You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

 

Example 1:


Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]
Example 2:


Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]
Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]

Solution : 
class Solution {
    public void rotate(int[][] mat) {
        // Brute Force
        // int n = mat.length,k = 0, l = 0;
        // int[][] arr = new int[n][n];
        // for (int i = 0; i < n; i++) {
        //     for (int j = 0; j < n; j++) {
        //         arr[j][n - 1 - i] = mat[i][j];
        //     }
        // }
        // for (int i = 0; i < n; i++) {
        //     for (int j = 0; j < n; j++) {
        //         mat[i][j] = arr[i][j];
        //     }
        // }

        // Optimal Solution 

        int n = mat.length;
        for(int i = 0;i<n-1;i++){
            for(int j = i+1;j<n;j++){
                int temp = mat[i][j];
                mat[i][j] = mat[j][i];
                mat[j][i] = temp;
            }
        }
        for(int[] row : mat){
            reverse(row);
        }
    }
    public void reverse(int[] arr){
        int i = 0,j = arr.length-1;
        while(i<j){
            int temp = arr[i];
            arr[i++] = arr[j];
            arr[j--] = temp;
        }
    }
}
