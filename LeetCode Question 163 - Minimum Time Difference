LeetCode Question 163 - Minimum Time Difference

Description : Given a list of 24-hour clock time points in "HH:MM" format, return the minimum minutes difference between any two time-points in the list.
 

Example 1:

Input: timePoints = ["23:59","00:00"]
Output: 1
Example 2:

Input: timePoints = ["00:00","23:59","00:00"]
Output: 0

Solution : 
class Solution {
    public int findMinDifference(List<String> list) {
        int[] arr = new int[list.size()];
        for(int i = 0;i<list.size();i++){
            arr[i] = change(list.get(i));
        }
        Arrays.sort(arr);
        int min = Integer.MAX_VALUE;
        for(int i = 1;i<arr.length;i++){
            min = Math.min((arr[i]-arr[i-1]),min);
        }
        return Math.min(min,(Math.abs(arr[0]+1440 - arr[arr.length-1])));
    }

    public int change(String a){
        String[] p1 = a.split(":");
        int hr = Integer.parseInt(p1[0]);
        int min = Integer.parseInt(p1[1]);

        return (hr*60) + min;
    }
}
