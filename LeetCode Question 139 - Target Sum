LeetCode Question 139 - Target Sum

Description : You are given an integer array nums and an integer target.

You want to build an expression out of nums by adding one of the symbols '+' and '-' before each integer in nums and then concatenate all the integers.

For example, if nums = [2, 1], you can add a '+' before 2 and a '-' before 1 and concatenate them to build the expression "+2-1".
Return the number of different expressions that you can build, which evaluates to target.

 

Example 1:

Input: nums = [1,1,1,1,1], target = 3
Output: 5
Explanation: There are 5 ways to assign symbols to make the sum of nums be target 3.
-1 + 1 + 1 + 1 + 1 = 3
+1 - 1 + 1 + 1 + 1 = 3
+1 + 1 - 1 + 1 + 1 = 3
+1 + 1 + 1 - 1 + 1 = 3
+1 + 1 + 1 + 1 - 1 = 3
Example 2:

Input: nums = [1], target = 1
Output: 1

Solution : 
class Solution {
    public int findTargetSumWays(int[] arr, int target) {
        return tways(arr,target,0,new HashMap<String,Integer>());
    }
    public int tways(int[] arr, int target,int curr,HashMap<String,Integer> memo){
        if(curr>=arr.length){
            if(target==0) return 1;
            else return 0;
        }
        String currKey = Integer.toString(curr) + "_"+ Integer.toString(target);
        if(memo.containsKey(currKey)) return memo.get(currKey);

        int pos = tways(arr,target-arr[curr],curr+1,memo);
        int neg = tways(arr,target+arr[curr],curr+1,memo);

        memo.put(currKey, pos+neg);

        return memo.get(currKey);
    }
}
